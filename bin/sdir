#!/usr/bin/env node

'use strict'

const program = require('commander')
const inquirer = require('inquirer')

const Promise = require('promise')
const fuzzy = require('fuzzy')

const packageInfo = require('./../package.json')
const dlist = require('../lib/')

inquirer.registerPrompt('autocomplete', require('inquirer-autocomplete-prompt'))

function genFilter(data) {
  return function (answers, input) {
    input = input || ''
    return new Promise(function(resolve) {
      let fuzzyResult = fuzzy.filter(input, data)
      resolve(fuzzyResult.map(function(el) {
        return el.original
      }))
    })
  }
}

program
  .version(packageInfo.version)
  .usage('[options] [args]')

program
  .command('add [dir]')
  .alias('a')
  .description('add dir to list')
  .action(function(dir, options){
    if (dir) {
      dlist.addDir(dir)
    } else {
      dlist.addDir(process.cwd())
    }
  })

program
  .command('list')
  .alias('l')
  .description('show all dirs')
  .action(function(options){
    dlist.printDirs()
  })

program
  .command('remove')
  .alias('rm')
  .description('remove item from dirs')
  .action(function(options){
    let dirs = dlist.getDirSelection(process.cwd())
    if (dirs.length == 0) {
      return
    }
    inquirer.prompt([{ 
      type: 'checkbox', 
      name: 'dir', 
      message: 'Choose dirs to remove', 
      choices: dirs
    }]).then(function(answers) {
        dlist.removeDirs(answers.dir)
    })
  })

program
  .command('pre')
  .alias('-')
  .description('switch to previous dir')
  .action(function(options){
    console.log(dlist.previousDir())
  })


program
  .command('clean')
  .alias('c')
  .description('clean the list')
  .action(function(options){
    dlist.cleanDirs()
  })

program.parse(process.argv)

// switch 
if (program.args.length == 0) {
    let dirs = dlist.getDirList()
    if (dirs.length == 0) {
      return
    }

    inquirer.prompt([{
      type: 'autocomplete',
      name: 'dir',
      message: 'Choose a dir',
      source: genFilter(dirs),
      pageSize: 10
    }]).then(function(answers) {
        dlist.floatDir(answers.dir)
    })
}
